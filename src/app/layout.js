// Use client 설정 전에는 기본 Server client
/*"use client"*/
import Link from 'next/link';
import "./globals.css";
import { Control } from './Control';
import process from "next/dist/build/webpack/loaders/resolve-url-loader/lib/postcss";
import {bgBlue} from "next/dist/lib/picocolors";
// import {useEffect, useState} from "react";

export const metadata = {
	title: "Web tutorials", description: "Generated by song jiwoo",
};

/*export default function RootLayout({children}) {
	const [topics, setTopics] = useState([]);
	// UseEffect = javascript 있어야 사용 가능. 보안 문제 있음
	useEffect(() => {
		fetch('http://localhost:9999/topics')
			.then(resp => resp.json())
			.then(result => {
				setTopics(result);
			});
	}, []);
*/
export default async function RootLayout({children}) {
	const resp = await fetch(process.env.NEXT_PUBLIC_API_URL+'topics', {cache: 'no-store'});
	const topics = await resp.json();
	
	// 출력 결과가 개발자 도구 콘솔에서는 나타나지 않고, 터미널에서만 출력됨 (이유: server side rendering. 서버 컴포넌트는 모든 작업을 서버 쪽에서 처리하고, 그 결과인 html 코드만 클라이언트로 전송)
	//console.log('page/layout.js/topics', topics);

	return (<html>
		<body className="bg-amber-50 w-[80%] mx-auto my-4">
		<h1><a href="/">WEB</a></h1>
		<ol className="flex mb-4">
			{topics.map((topic) => {
				return <li key={topic.id}><Link className="min-h-[28px] inline-flex gap-0.5 justify-center overflow-hidden text-sm font-medium transition rounded-full bg-zinc-900 py-1 px-3 text-white hover:bg-zinc-700 dark:bg-emerald-400/10 dark:text-emerald-400 dark:ring-1 dark:ring-inset dark:ring-emerald-400/20 dark:hover:bg-emerald-400/10 dark:hover:text-emerald-300 dark:hover:ring-emerald-300" href={`/read/${topic.id}`}>{topic.title}</Link></li>
			})}
		</ol>
		{children}
		<Control />
		</body>
		</html>);
}
